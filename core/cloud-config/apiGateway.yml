Resources:
  RestaurantCoreApiGatewayV2:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: RestaurantCoreApi
      ProtocolType: HTTP
      Description: API Gateway to all microservices
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowOrigins:
          - '*'
        AllowMethods:
          - '*'

  RestaurantCoreApiGatewayV2StageV1:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref RestaurantCoreApiGatewayV2
      StageName: v1
      AutoDeploy: true
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt: [RestaurantCoreApiGatewayV2LogGroup, Arn]
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength","errorMessage":"$context.error.message", "errorAuthorizer": "$context.authorizer.error", "errorIntegration": "$context.integration.error"}'

  RestaurantCoreApiGatewayV2LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - '/aws/apiGateway'
          - !Ref RestaurantCoreApiGatewayV2
          - 'access-logs'

  RestaurantCoreApiGatewayV2Authorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      Name: RestaurantCoreApiRequestAuthorizer
      ApiId: !Ref RestaurantCoreApiGatewayV2
      AuthorizerType: REQUEST
      AuthorizerPayloadFormatVersion: '2.0'
      AuthorizerResultTtlInSeconds: 300
      EnableSimpleResponses: false
      AuthorizerUri:
        Fn::Sub: 'arn:aws:apigateway:${self:custom.constants.REGION}:lambda:path/2015-03-31/functions/${self:custom.environment.RESTAURANT_ACCOUNT.AUTH_LAMBDA_REQUEST_AUTHORIZER}/invocations'
      IdentitySource:
        - '$request.header.Authorization'
      AuthorizerCredentialsArn:
        Fn::GetAtt: [IamRestaurantCoreLambdaAuthorizerInvokeRole, Arn]

Outputs:
  RestaurantCoreApiGatewayV2Id:
    Value:
      Fn::GetAtt: [RestaurantCoreApiGatewayV2, ApiId]
    Export:
      Name: ${self:service}-RestaurantCoreApiGatewayV2-ApiId
  RestaurantCoreApiGatewayV2AuthorizerId:
    Value:
      Ref: RestaurantCoreApiGatewayV2Authorizer
    Export:
      Name: ${self:service}-${self:provider.stage}-RestaurantCoreApiGatewayV2Authorizer-AuthorizerId
