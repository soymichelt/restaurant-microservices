order-get-all:
  role: IamRestaurantKitchenLambdaAccessRole
  handler: src/services/orders/infrastructure/functions/http/getAll/handler.handler
  maximumRetryAttempts: 0
  environment:
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
  events:
    - httpApi:
        method: GET
        path: /kitchen/orders

order-create:
  role: IamRestaurantKitchenLambdaAccessRole
  maximumRetryAttempts: 0
  handler: src/services/orders/infrastructure/functions/http/create/handler.handler
  environment:
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
    SQS_URL: !Ref EventBusSqsRestaurantKitchenQueue
  events:
    - httpApi:
        method: POST
        path: /kitchen/orders

order-prepare:
  role: IamRestaurantKitchenLambdaAccessRole
  handler: src/services/orders/infrastructure/functions/sqs/prepare/handler.handler
  maximumRetryAttempts: 0
  provisionedConcurrency: 1
  reservedConcurrency: 1
  environment:
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
    LAMBDA_ORDER_INGREDIENTS_STOCK: ${self:custom.environment.RESTAURANT_WAREHOUSE.LAMBDA_ORDER_INGREDIENTS_STOCK}
  events:
    - sqs:
        batchSize: 1
        arn:
          Fn::GetAtt: [EventBusSqsRestaurantKitchenQueue, Arn]

order-move-to-next-state:
  role: IamRestaurantKitchenLambdaAccessRole
  handler: src/services/orders/infrastructure/functions/http/moveState/handler.handler
  maximumRetryAttempts: 0
  environment:
    SNS_TOPIC_ARN: !Ref EventBusSnsRestaurantKitchenTopic
    ABLY_API_KEY: ${ssm:/restaurant-kitchen/ably/ABLY_API_KEY}
    SQS_URL: !Ref EventBusSqsRestaurantKitchenQueue
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
  events:
    - httpApi:
        method: PATCH
        path: /kitchen/orders/{orderId}

order-update-state:
  role: IamRestaurantKitchenLambdaAccessRole
  handler: src/services/orders/infrastructure/functions/http/updateState/handler.handler
  maximumRetryAttempts: 0
  environment:
    SNS_TOPIC_ARN: !Ref EventBusSnsRestaurantKitchenTopic
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
  events:
    - httpApi:
        method: PATCH
        path: /kitchen/orders/{orderId}/state

order-update-notes:
  role: IamRestaurantKitchenLambdaAccessRole
  handler: src/services/orders/infrastructure/functions/http/updateNotes/handler.handler
  maximumRetryAttempts: 0
  environment:
    SNS_TOPIC_ARN: !Ref EventBusSnsRestaurantKitchenTopic
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
  events:
    - httpApi:
        method: PATCH
        path: /kitchen/orders/{orderId}/notes

order-checks:
  role: IamRestaurantKitchenLambdaAccessRole
  handler: src/services/orders/infrastructure/functions/cronjobs/checkOrders/handler.handler
  maximumRetryAttempts: 0
  environment:
    MONGO_DATABASE_URI: ${ssm:/restaurant-kitchen/databases/MONGO_URI}
    MONGO_DATABASE_NAME: ${ssm:/restaurant-kitchen/databases/MONGO_NAME}
    SQS_URL: !Ref EventBusSqsRestaurantKitchenQueue
  events:
    # Ejecutar cada 3 minutos de 10 AM a 9 PM, hora de Colombia, de lunes a domingo
    - schedule:
        rate: cron(0/3 15-2 ? * SUN-SAT *)
